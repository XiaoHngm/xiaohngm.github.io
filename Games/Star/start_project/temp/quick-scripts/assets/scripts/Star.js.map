{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","start","update","dt","getPlayerDistance","onPicked","opacityRatio","game","timer","starDuration","minOpacity","node","opacity","Math","floor","playerPos","player","getPosition","dist","position","sub","mag","spawnNewStar","gainScore","destroy"],"mappings":";;;;;;AAGAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY,CADJ,CACM;AADN,KAHP;;AAOL;AACAC,UARK,oBAQK,CAAE,CARP;AAULC,SAVK,mBAUI,CAAE,CAVN;;;AAYLC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKC,iBAAL,KAA2B,KAAKL,UAApC,EAAgD;AAC5C;AACA,iBAAKM,QAAL;AACA;AACH,SAJD,MAIM;AACN;AACA,YAAIC,eAAe,IAAI,KAAKC,IAAL,CAAUC,KAAV,GAAgB,KAAKD,IAAL,CAAUE,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKC,IAAL,CAAUC,OAAV,GAAoBF,aAAaG,KAAKC,KAAL,CAAWR,gBAAgB,MAAMI,UAAtB,CAAX,CAAjC;AACH,KAvBI;;AAyBLN,uBAAmB,6BAAY;AAC3B;AACA,YAAIW,YAAY,KAAKR,IAAL,CAAUS,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKP,IAAL,CAAUQ,QAAV,CAAmBC,GAAnB,CAAuBL,SAAvB,EAAkCM,GAAlC,EAAX;AACA,eAAOH,IAAP;AACH,KA/BI;;AAiCLb,cAAU,oBAAW;AACjB;AACA,aAAKE,IAAL,CAAUe,YAAV;AACA;AACA,aAAKf,IAAL,CAAUgB,SAAV;AACA;AACA,aAAKZ,IAAL,CAAUa,OAAV;AACH;AAxCI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        pickRadius: 0,// 星星和主角之间的距离小于这个数值时，就会完成收集\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {},\r\n\r\n    start () {},\r\n\r\n    update: function (dt) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        } else;\r\n        // 根据 Game 脚本中的计时器更新星星的透明度\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n\r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 调用 Game 脚本的得分方法\r\n        this.game.gainScore();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n});\r\n"]}