{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","pickRadius","ground","default","type","Node","player","starPrefab","Prefab","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","score","spawnNewStar","start","update","dt","console","log","star","getComponent","timer","starDuration","gameOver","getPlayerDistance","starPicked","stopAllActions","director","loadScene","instantiate","node","addChild","randX","Math","random","width","randY","jumpHeight","setPosition","v2","playerPos","getPosition","dist","position","sub","mag","gainScore","destroy","string","toString","audioEngine","playEffect","genPlayer"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        pickRadius: 0,// 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        ground: { // 地面节点，用于确定星星生成的高度\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        player: { // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        starPrefab: { // 这个属性引用了星星预制资源\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        scoreAudio: { // 得分音效资源\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 初始化计时器\r\n        this.score = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n    },\r\n\r\n    start () {},\r\n\r\n    update: function (dt) {\r\n        console.log(\"adsa\");\r\n        if (this.star.getComponent('Star').timer > this.star.getComponent('Star').starDuration) { //超过限度还没有摘到星星\r\n            this.gameOver(); // 调用游戏结束\r\n        } else if (this.getPlayerDistance() < this.pickRadius) { //判断星星和主角之间的距离是否小于收集距离\r\n            this.starPicked(); //调用收集行为\r\n        } else;\r\n    },\r\n\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        this.star = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(this.star);\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var randX = (Math.random() - 0.5) * this.node.width;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        this.star.setPosition(cc.v2(randX, randY));\r\n    },\r\n\r\n    getPlayerDistance: function () {\r\n        // 得到 player 节点位置\r\n        var playerPos = this.player.getPosition();\r\n        // 根据player和star两节点位置计算两点之间距离\r\n        var dist = this.star.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    starPicked: function() {\r\n        // 调用 Game 脚本的得分方法\r\n        this.gainScore();\r\n        // 然后销毁当前星星节点\r\n        this.star.destroy();\r\n        // 当星星被收集时，生成一个新的星星\r\n        this.spawnNewStar();\r\n    },\r\n\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n    genPlayer: function () {\r\n\r\n    },\r\n});\r\n"]}